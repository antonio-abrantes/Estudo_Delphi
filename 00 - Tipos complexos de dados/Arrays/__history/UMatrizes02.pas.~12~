unit UMatrizes02;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Samples.Spin;

type
  TForm1 = class(TForm)
    ListBox1: TListBox;
    Sortear: TButton;
    SpinEdit1: TSpinEdit;
    Label1: TLabel;
    procedure SortearClick(Sender: TObject);
    function verificaNumRepetido(num : Integer): Boolean;
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;
  Loteria: array of Integer;

implementation

{$R *.dfm}

procedure TForm1.SortearClick(Sender: TObject);
var
  I, qtd, Sorte : Integer;
begin
   qtd := StrToInt(SpinEdit1.Text);

   if qtd <= 0 then
      begin
          ShowMessage('Quantidade de numeros tem que ser maior que 0 e menor que 20');
          Exit;
      end;

   SetLength(Loteria, qtd);
   Randomize;
   for I := 1 to qtd do
   begin
     Sorte := Random(100);
     if verificaNumRepetido(Sorte) then
     begin
        if I > 1 then
           I := I - 1;
        Continue;
     end;
     Loteria[I] := Sorte;
   end;

   ListBox1.Clear;
   for I := 1 to qtd do
   begin
     ListBox1.Items.Add(IntToStr(Loteria[I]));
   end;

end;

function TForm1.verificaNumRepetido(num : Integer): Boolean;
var
  I : Integer;
begin
    for I := 1 to Length(Loteria) do
    begin
        if Loteria[I] = num then
          Result := true;
    end;

    Result := false;
end;

end.
